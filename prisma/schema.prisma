// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bid {
  id         Int      @id @default(autoincrement())
  amount     Float
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  auction    Auction  @relation(fields: [auctionId], references: [id])
  auctionId  Int
}

model User {
  id         Int       @id @default(autoincrement())
  wallet     String    @unique
  reputation Int       @default(0)
  createdAt  DateTime  @default(now())
  auctions   Auction[]
  bids       Bid[]
}

model Auction {
  id                 Int      @id @default(autoincrement())
  auctionId          Int      @unique
  title              String
  description        String
  imageUrl           String
  seller             String
  createdAt          DateTime @default(now())
  ended              Boolean  @default(false)
  deliveryConfirmed  Boolean  @default(false)
  userId             Int?
  user               User?    @relation(fields: [userId], references: [id])
  bids               Bid[]
  disputes           Dispute[]
}

model Dispute {
  id           Int      @id @default(autoincrement())
  disputeId    Int      @unique
  auctionId    Int
  buyer        String
  reason       String
  resolved     Boolean  @default(false)
  favorBuyer   Boolean?
  createdAt    DateTime @default(now())
  auction      Auction  @relation(fields: [auctionId], references: [id])
}
